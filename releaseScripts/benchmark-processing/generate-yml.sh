#!/bin/bash

if [ "$#" -ne 1 ] || [[ "$1" == "--help" ]]
then
  echo "
Generates .yml files for Ultimate benchmark programs.

Evaluation with benchexec requires .yml files describing the progerty and the
expected verdict, in order to judge if the verification result is correct.

This script takes the verdict annotation from the first line of a benchmark,
i.e., \"//#Safe\" or \"//#Unsafe\", and creates a .yml file from it.

    USAGE: generate-yml.sh DIR

where DIR is a directory, in which we recursively generate .yml files for all
.bpl, .c and .i files. Existing .yml files are preserved, unless they were also
generated by this script.
"
  exit
fi


MYDIR=$(realpath $(dirname "$0"))
GENERATION_MSG="# automatically generated by releaseScripts/benchmark-processing/generate-yml.sh"

DIR=$1
DIR=${DIR%/}

COUNT=0

shopt -s globstar
for file in "$DIR"/**/*.{bpl,c,i}
do
  [ -f "$file" ] || continue

  NAME=$(basename $file)
  EXTENSION="${file##*.}"
  YMLFILE="${file%".$EXTENSION"}.yml"

  if [ -f "$YMLFILE" ]
  then
    YMLLINE=$(head -n 1 "$YMLFILE")
    if [[ "$YMLLINE" != "$GENERATION_MSG" ]]
    then
      echo "INFO: Skipping $file (non-generated .yml already exists)"
      continue
    fi
  fi

  if [[ "$EXTENSION" == "bpl" ]]
  then
    LANGUAGE="Boogie"
  elif [[ "$EXTENSION" == "c" ]] || [[ "$EXTENSION" == "i" ]]
  then
    LANGUAGE="C"
  else
    echo "WARN: Cannot determine language for $file"
    continue
  fi

  LINE=$(head -n 1 "$file")
  VERDICT="unknown"
  if [[ "$LINE" == *"#Safe"* ]]
  then
    VERDICT="true"
  elif [[ "$LINE" == *"#Unsafe"* ]]
  then
    VERDICT="false"
  else
    echo "WARN: Cannot determine verdict for $file (first line: '$LINE')"
    continue
  fi

  PROPFILE=$(realpath -s --relative-to="$(dirname $file)" "$MYDIR/../../trunk/examples/svcomp/properties/unreach-call.prp")

  echo "$GENERATION_MSG

format_version: '2.0'

input_files: '$NAME'

properties:
  - property_file: $PROPFILE
    expected_verdict: $VERDICT

options:
  language: $LANGUAGE
" > "$YMLFILE"
  COUNT=$((COUNT+1))
done

echo ""
echo "Generated $COUNT .yml files"

RabinAutomaton abcAutomaton = (
	alphabet = {a b c},
	states = {s1 s2 s3 s4 s5},
	initialStates = {s1 s2 s3 s4 s5},
	acceptingStates = {s1 s3 s5},
	finiteStates = {s2 s4},
	transitions = { (s1 a s2) (s1 a s3) (s2 b s3) (s3 c s4) (s3 b s5) (s4 a s4) (s4 b s5) (s5 c s1) }
);
RabinAutomaton abc2Automaton = (
	alphabet = {a b c},
	states = {s1 s2 s3 s4 s5},
	initialStates = {s2},
	acceptingStates = {s1 s3 s5},
	finiteStates = {s2 s4},
	transitions = { (s1 a s2) (s1 a s3) (s2 b s3) (s3 c s4) (s3 b s5) (s4 a s4) (s4 b s5) (s5 c s1) }
);

RabinAutomaton abc4Automaton = (
	alphabet = {a b c},
	states = {s1 s2 s3 s4 s5},
	initialStates = {s4},
	acceptingStates = {s1 s3 s5},
	finiteStates = {s2 s4},
	transitions = { (s1 a s2) (s1 a s3) (s2 b s3) (s3 c s4) (s3 b s5) (s4 a s4) (s4 b s5) (s5 c s1) }
);


assert(!buchiIsEmpty(rabin2BuchiOperation(abcAutomaton)));
assert(!isEmpty(buchi2RabinOperation(rabin2BuchiOperation(abcAutomaton))));

assert(!buchiIsEmpty(rabin2BuchiOperation(abc2Automaton)));
assert(!isEmpty(buchi2RabinOperation(rabin2BuchiOperation(abc2Automaton))));

assert(!buchiIsEmpty(rabin2BuchiOperation(abc4Automaton)));
assert(!isEmpty(buchi2RabinOperation(rabin2BuchiOperation(abc4Automaton))));

assert(buchiAccepts(rabin2BuchiOperation(abcAutomaton), [a a , a b c]));
assert(buchiAccepts(rabin2BuchiOperation(abcAutomaton), [a c a, a b c]));
assert(buchiAccepts(rabin2BuchiOperation(abcAutomaton), [a a a a a a a a a b , c a b]));
assert(buchiAccepts(rabin2BuchiOperation(abcAutomaton), [, a b c]));
assert(buchiAccepts(rabin2BuchiOperation(abcAutomaton), [, b c a]));
assert(buchiAccepts(rabin2BuchiOperation(abcAutomaton), [, c a b]));
assert(!buchiAccepts(rabin2BuchiOperation(abcAutomaton), [, c b a]));
assert(!buchiAccepts(rabin2BuchiOperation(abcAutomaton), [, c a b b]));
assert(!buchiAccepts(rabin2BuchiOperation(abcAutomaton), [b, c a b b]));
assert(!buchiAccepts(rabin2BuchiOperation(abcAutomaton), [a a a a a a a a b, c a b b]));
assert(!buchiAccepts(rabin2BuchiOperation(abcAutomaton), [c c c c c c c c c c c, c a b b]));
assert(!buchiAccepts(rabin2BuchiOperation(abcAutomaton), [c c c c c c c c c c c, a b c]));
